											/******AUTO ID**************/
/******Object:  StoredProcedure [dbo].[sp_AutoIncreaseID]***************/

/******Object:  StoredProcedure [dbo].[sp_AutoIncreaseID_XE]***************/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_XE]
	(
		@FIRST_ID VARCHAR(5)
	)
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM XEMAY WHERE MAXE_PT LIKE '%'+@FIRST_ID+'%'
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT(@FIRST_ID,@ID)
END
/****PHIEUNHAP***/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_PN]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM PHIEUNHAP
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('PN',@ID)
END
/****PHIEUXUAT***/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_PX]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM PHIEUXUAT
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('PX',@ID)
END
/****SUACHUA***/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_SC]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM SUACHUA
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('SC',@ID)
END
/****BAO HANH***/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_BH]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM BAOHANH
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('BH',@ID)
END
/***PHUONG THUC THANH TOAN****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_PTTT]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM PHUONGTHUC_TT
	IF(@LAST_ID<10)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('0', @LAST_ID)	
	ELSE
		SET @ID =CONCAT('0000000', @LAST_ID)
	RETURN CONCAT('PTT',@ID)
END
/***KHACH HANG****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_KH]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM KHACHHANG
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('KH',@ID)
END
/***NHAN VIEN****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_NV]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM NHANVIEN
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('NV',@ID)
END
/***TAI KHOAN****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_TK]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM QL_DANGNHAP
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('NV',@ID)
END
/***NHA CUNG CAP****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_NCC]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM NHACC
	IF(@LAST_ID<10)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('0', @LAST_ID)	
	ELSE
		SET @ID =CONCAT('0000000', @LAST_ID)
	RETURN CONCAT('NCC',@ID)
END
/***LOAI XE****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_LX]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM LOAIXE
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('LX',@ID)
END
/***NHA SAN XUAT****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_NSX]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM NHASX
	IF(@LAST_ID<10)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('0', @LAST_ID)	
	ELSE
		SET @ID =CONCAT('0000000', @LAST_ID)
	RETURN CONCAT('NSX',@ID)
END
/***PHIEU CHI****/
CREATE FUNCTION [dbo].[sp_AutoIncreaseID_PC]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM PHIEUCHI
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('PC',@ID)
END

CREATE FUNCTION [dbo].[sp_AutoIncreaseID_NHOM]
()	
	RETURNS CHAR(10)
AS
BEGIN
	DECLARE @LAST_ID INT
	DECLARE @ID CHAR(8)
	SELECT @LAST_ID=(MAX(ID_AUTO)+1) FROM QL_NHOM
	IF(@LAST_ID<10)
		SET @ID =CONCAT('0000000', @LAST_ID)
	ELSE IF(@LAST_ID<100)
		SET @ID =CONCAT('000000', @LAST_ID)
	ELSE IF(@LAST_ID<1000)
		SET @ID =CONCAT('00000', @LAST_ID)
	ELSE IF(@LAST_ID<10000)
		SET @ID =CONCAT('0000', @LAST_ID)
	ELSE IF(@LAST_ID<100000)
		SET @ID =CONCAT('000', @LAST_ID)
	ELSE IF(@LAST_ID<1000000)
		SET @ID =CONCAT('00', @LAST_ID)
	ELSE IF(@LAST_ID<10000000)
		SET @ID =CONCAT('0', @LAST_ID)
	ELSE
		SET @ID =CONCAT('00000000', @LAST_ID)
	RETURN CONCAT('NQ',@ID)
END
/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_Getlist] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_getList]
	@TAIKHOAN CHAR(10) = ''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,TAIKHOAN, HOATDONG FROM QL_DANGNHAP u
	WHERE  (@TAIKHOAN = '' OR	u.TAIKHOAN LIKE '%' + @TAIKHOAN + '%')			
END


/****** Object:  StoredProcedure [dbo].[sp_Nhom_Getlist] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Nhom_getList]
	@MANHOM CHAR(10) = ''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,* FROM QL_NHOM u
	WHERE  (@MANHOM = '' OR	u.MANHOM LIKE '%' + @MANHOM + '%')			
END
GO

GO
/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_Nhom_Getlist] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_Nhom_getList]
	@MANHOM CHAR(10) = '',
	@TAIKHOAN CHAR(10)=''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,TAIKHOAN,b.TENNHOM,a.GHICHU  FROM QL_NHOMDANGNHAP a INNER JOIN QL_NHOM b ON a.MANHOM=b.MANHOM
	WHERE  (@MANHOM = '' OR	a.MANHOM LIKE '%' + @MANHOM + '%') AND (@TAIKHOAN = '' OR	a.TAIKHOAN LIKE '%' + @TAIKHOAN + '%')		
END
GO

/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_Nhom_GetAll] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_Nhom_GetAll]
	@MANHOM CHAR(10) = '',
	@TAIKHOAN CHAR(10)=''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,*  FROM QL_NHOMDANGNHAP a INNER JOIN QL_NHOM b ON a.MANHOM=b.MANHOM
	WHERE  (@MANHOM = '' OR	a.MANHOM LIKE '%' + @MANHOM + '%') AND (@TAIKHOAN = '' OR	a.TAIKHOAN LIKE '%' + @TAIKHOAN + '%')		
END
GO

/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_Nhom_Insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_Nhom_Insert]
	@MANHOM CHAR(10),
	@TAIKHOAN CHAR(10),
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM QL_NHOMDANGNHAP WHERE TAIKHOAN = @TAIKHOAN and MANHOM = @MANHOM)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên tài khoản đã tồn tại.'
		RETURN
	END
	INSERT INTO QL_NHOMDANGNHAP (MANHOM,TAIKHOAN,GHICHU)
	SELECT @MANHOM,@TAIKHOAN,(SELECT B.GHICHU FROM QL_NHOM B WHERE MANHOM = @MANHOM)	
END
GO
/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_Nhom_Delete] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_Nhom_Delete]
	@MANHOM CHAR(10),
	@TAIKHOAN CHAR(10)

AS
BEGIN
	DELETE FROM QL_NHOMDANGNHAP
	WHERE MANHOM=@MANHOM AND TAIKHOAN=@TAIKHOAN	
END
GO

/****** Object:  StoredProcedure [dbo].[sp_PhanQuyen_getList] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhanQuyen_getList]
	@MANHOM CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,mh.MAMH, TENMH,QUYEN  from QL_MANHINH mh LEFT JOIN  QL_PHANQUYEN ph ON mh.MAMH=ph.MAMH and (ph.MANHOM=@MANHOM or (ph.MANHOM LIKE '%' + @MANHOM + '%'))
END
GO

/****** Object:  StoredProcedure [dbo].[sp_PhanQuyen_insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhanQuyen_insert]
	@MANHOM CHAR(10),
	@MAMH CHAR(10),
	@QUYEN BIT,
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT
	

AS
BEGIN
	
	IF EXISTS (SELECT 1 FROM QL_PHANQUYEN WHERE MAMH = @MAMH and MANHOM = @MANHOM)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Sửa quyền thành công!'
		UPDATE QL_PHANQUYEN SET QUYEN=@QUYEN WHERE MAMH = @MAMH and MANHOM = @MANHOM	
		RETURN
	END
	SELECT @ErrCode = 0, @ErrMsg = N'Thêm quyền thành công!'
	INSERT INTO QL_PHANQUYEN (MANHOM,MAMH,QUYEN)
	SELECT @MANHOM,@MAMH,@QUYEN	
END
GO

/****** Object:  StoredProcedure [dbo].[sp_Filter_ManHinh] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Filter_ManHinh]
	@TAIKHOAN CHAR(10)
AS
BEGIN
	SELECT DISTINCT PQ.MAMH FROM QL_NHOMDANGNHAP DN INNER JOIN QL_PHANQUYEN PQ ON DN.MANHOM = PQ.MANHOM AND TAIKHOAN=@TAIKHOAN AND QUYEN=1
END
GO

/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_Insert] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_Insert]	
	@TAIKHOAN CHAR(10),
	@MATKHAU CHAR(50),
	@HOATDONG BIT,
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM QL_DANGNHAP WHERE TAIKHOAN = @TAIKHOAN )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên tài khoản đã tồn tại.'
		RETURN
	END
	INSERT INTO QL_DANGNHAP (TAIKHOAN,MATKHAU,HOATDONG)
	SELECT @TAIKHOAN,@MATKHAU,@HOATDONG 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_TaiKhoan_ChangePassword]    ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TaiKhoan_ChangePassword]
	@TAIKHOAN CHAR(10),
	@MATKHAU CHAR(50),
	@MATKHAUMOI CHAR(50),
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM QL_DANGNHAP  WHERE TAIKHOAN = @TAIKHOAN AND MATKHAU = @MATKHAU)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Bạn nhập sai mật khẩu.'
		RETURN
	END
	
	UPDATE QL_DANGNHAP 
	SET MATKHAU = @MATKHAUMOI WHERE TAIKHOAN = @TAIKHOAN 
	
END
GO
/****** Object:  StoredProcedure [dbo].[sp_Nhom_Insert] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Nhom_Insert]	
	@MANHOM CHAR(10),
	@TENNHOM NVARCHAR(50),
	@GHICHU NVARCHAR(100)='',
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM QL_NHOM WHERE MANHOM = @MANHOM )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Nhóm đã tồn tại.'
		RETURN
	END
	INSERT INTO QL_NHOM (MANHOM,TENNHOM,GHICHU)
	SELECT @MANHOM,@TENNHOM,@GHICHU 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_Nhom_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
Go

CREATE PROCEDURE [dbo].[sp_Nhom_Update]	
	@MANHOM CHAR(10),
	@TENNHOM NVARCHAR(50),
	@GHICHU NVARCHAR(100)='',
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM QL_NHOM WHERE MANHOM = @MANHOM )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Nhóm không tồn tại.'
		RETURN
	END
	UPDATE QL_NHOM 
	SET TENNHOM = @TENNHOM,GHICHU=@GHICHU
	WHERE MANHOM = @MANHOM
END
GO

/****** Object:  StoredProcedure [dbo].[sp_Nhom_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Nhom_Delete]	
	@MANHOM CHAR(10),	
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM QL_NHOMDANGNHAP WHERE MANHOM = @MANHOM )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM QL_PHANQUYEN WHERE MANHOM = @MANHOM )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM QL_NHOM WHERE MANHOM=@MANHOM
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhanVien_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhanVien_select]
	@MANV CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,nv.MANV,cv.MACV,TENNV, TENCV, NGAYSINH,SDT,DIACHI,PHAI,LUONGCB  from NHANVIEN nv INNER JOIN  CHUCVU cv ON nv.MACV=cv.MACV WHERE @MANV='' or MANV LIKE '%' + @MANV + '%' 
END
GO




/****** Object:  StoredProcedure [dbo].[sp_KhachHang_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_KhachHang_select]
	@MAKH CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAKH,TENKH,SDT,DIACHI,PHAI,CMND,NGAYSINH  from KHACHHANG WHERE @MAKH='' or MAKH LIKE '%' + @MAKH + '%' 
END
GO

/****** Object:  StoredProcedure [dbo].[sp_NhaCC_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaCC_select]
	@MANCC CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MANCC,TENNCC,DIACHI,SDT,MAIL  from NHACC WHERE @MANCC='' or MANCC LIKE '%' + @MANCC + '%' 
END
GO

/****** Object:  StoredProcedure [dbo].[sp_NhaSX_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaSX_select]
	@MASX CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASX,TENNSX,QUOCGIA  from NHASX WHERE @MASX='' or MASX LIKE '%' + @MASX + '%' 
END
GO

/****** Object:  StoredProcedure [dbo].[sp_LoaiXe_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_LoaiXe_select]
	@MALOAI CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MALOAI,TENLOAI,MOTA  from LOAIXE WHERE @MALOAI='' or MALOAI LIKE '%' + @MALOAI + '%' 
END
GO



--/****** Object:  StoredProcedure [dbo].[sp_XeMay_select] ******/


--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO

--CREATE PROCEDURE [dbo].[sp_XeMay_select]
--	@MAXE_PT CHAR(10)=''
	

--AS
--BEGIN
--	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,xm.MAXE_PT,MASX,lx.MALOAI,TENX_PT,DT_XILANH,DT_XILANH,CONGSUAT,LOAIDONGCO,KHOILUONG,DAIRONGCAO,DONGIA_N,DONGIA_X,DVT,TGBH,SLTON,MAU,NAMSX,xm.MOTA
--	from XEMAY xm 
--	--INNER JOIN NHASX sx ON xm.MAXE_PT=sx.MASX
--	INNER JOIN LOAIXE lx ON xm.MALOAI=lx.MALOAI
	
--	WHERE @MAXE_PT='' or MAXE_PT LIKE '%' + @MAXE_PT + '%' 
--END
--GO
/****** Object:  StoredProcedure [dbo].[sp_PhuTung_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhuTung_select]
	@MAXE_PT CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,xm.MAXE_PT,sx.MASX,lx.MALOAI,TENX_PT,DT_XILANH,DT_XILANH,CONGSUAT,LOAIDONGCO,KHOILUONG,DAIRONGCAO,DONGIA_N,DVT,TGBH,SLTON,MAU,NAMSX,xm.MOTA
	from XEMAY xm 
	INNER JOIN NHASX sx ON xm.MAXE_PT=sx.MASX
	INNER JOIN LOAIXE lx ON xm.MALOAI=lx.MALOAI
	
	WHERE @MAXE_PT='' or MAXE_PT LIKE '%' + @MAXE_PT + '%' 
END
GO

/****** Object:  StoredProcedure [dbo].[sp_NhapXe_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhapXe_select]
	@MAPN CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,pn.MAPN,ncc.MANCC,MAPTT,nv.MANV,NGAYNHAP,THUE_N,TINHTRANG,TONGTIEN_N
	from PHIEUNHAP pn
	INNER JOIN NHACC ncc ON pn.MANCC=ncc.MANCC
	INNER JOIN NHANVIEN nv ON pn.MANV=nv.MANV
	WHERE @MAPN='' or MAPN LIKE '%' + @MAPN + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhapPhuTung_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhapPhuTung_select]
	@MAPN CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,pn.MAPN,ncc.MANCC,MAPTT,nv.MANV,NGAYNHAP,THUE_N,TINHTRANG,TONGTIEN_N
	from PHIEUNHAP pn
	INNER JOIN NHACC ncc ON pn.MANCC=ncc.MANCC
	INNER JOIN NHANVIEN nv ON pn.MANV=nv.MANV
	WHERE @MAPN='' or MAPN LIKE '%' + @MAPN + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_BanXe_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_BanXe_select]
	@MAPX CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,MAPTT,kh.MAKH,nv.MANV,NGAYXUAT,PHI_DKX,UUDAI,TONGTIEN_X
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
	WHERE @MAPX='' or MAPX LIKE '%' + @MAPX + '%' 
END
GO

/****** Object:  StoredProcedure [dbo].[sp_BanPhuTung_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_BanPhuTung_select]
	@MAPX CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,MAPTT,kh.MAKH,nv.MANV,NGAYXUAT,PHI_DKX,UUDAI,TONGTIEN_X
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
	WHERE @MAPX='' or MAPX LIKE '%' + @MAPX + '%' 
END
GO





/**************************** NHÂN VIÊN*******************/

/****** Object:  StoredProcedure [dbo].[sp_NhanVien_select] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhanVien_select]
	@MANV CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,nv.MANV,cv.MACV,TENNV, TENCV, NGAYSINH,SDT,DIACHI,PHAI,LUONGCB  from NHANVIEN nv INNER JOIN  CHUCVU cv ON nv.MACV=cv.MACV WHERE @MANV='' or MANV LIKE '%' + @MANV + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhanVien_insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_NhanVien_Insert]	
	@MANV CHAR(10),
	@MACV CHAR(10),
	@TENNV nvarchar(50),
	@NGAYSINH datetime,         
    @SDT  varchar(11),          
    @DIACHI nvarchar(50), 
	@PHAI CHAR(3),        
    @LUONGCB  float,                 
    @ANHNV image ,            
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM NHANVIEN WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên nhân viên đã tồn tại.'
		RETURN
	END
	INSERT INTO NHANVIEN(MANV,MACV,TENNV,NGAYSINH,SDT,DIACHI,PHAI,LUONGCB,ANHNV)
	SELECT @MANV,@MACV,@TENNV,@NGAYSINH,@SDT,@DIACHI,@PHAI,@LUONGCB,@ANHNV
END
GO

/****** Object:  StoredProcedure [dbo].[sp_NhanVien_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_NhanVien_Update]	
	@MANV CHAR(10),
	@MACV CHAR(10),
	@TENNV nvarchar(50),
	@NGAYSINH datetime,         
    @SDT  varchar(11),          
    @DIACHI nvarchar(50), 
	@PHAI CHAR(3),        
    @LUONGCB  float,                 
    @ANHNV image ,            
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF NOT EXISTS (SELECT 1 FROM NHANVIEN WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên nhân viên khong tồn tại.'
		RETURN
	END	
	UPDATE NHANVIEN SET TENNV=@TENNV, MACV=@MACV, NGAYSINH=@NGAYSINH, SDT=@SDT, DIACHI=@DIACHI,PHAI=@PHAI,LUONGCB=@LUONGCB, ANHNV=@ANHNV
		WHERE MANV=@MANV
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhanVien_Delete] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_NhanVien_Delete]	
	@MANV CHAR(10),	       
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF EXISTS (SELECT 1 FROM BAOHANH WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không thể xóa'
		RETURN
	END	
	IF EXISTS (SELECT 1 FROM SUACHUA WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không thể xóa'
		RETURN
	END	
	IF EXISTS (SELECT 1 FROM PHIEUNHAP WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không thể xóa'
		RETURN
	END	
	IF EXISTS (SELECT 1 FROM PHIEUXUAT WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không thể xóa'
		RETURN
	END	
	DELETE FROM NHANVIEN WHERE MANV=@MANV
	
END

/**************************KHÁCH HÀNG*************************/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_KhachHang_select]
	@MAKH CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,*  from KHACHHANG  WHERE @MAKH='' or MAKH LIKE '%' + @MAKH + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_KhachHang_insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_KhachHang_Insert]	
	@MAKH CHAR(10),
	@TENKH nvarchar(50),	  
    @SDT  varchar(11),          
    @DIACHI nvarchar(50), 
	@PHAI CHAR(3),        
    @CMND CHAR(12),
	@NGAYSINH datetime,                
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM KHACHHANG WHERE MAKH = @MAKH)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Khách hàng đã tồn tại.'
		RETURN
	END
	INSERT INTO KHACHHANG(MAKH,TENKH,SDT,DIACHI,PHAI,CMND,NGAYSINH)
	SELECT @MAKH,@TENKH,@SDT,@DIACHI,@PHAI,@CMND,@NGAYSINH
END
GO

/****** Object:  StoredProcedure [dbo].[sp_KhachHang_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_KhachHang_Update]	
	@MAKH CHAR(10),
	@TENKH nvarchar(50),	  
    @SDT  varchar(11),          
    @DIACHI nvarchar(50), 
	@PHAI CHAR(3),        
    @CMND CHAR(12),
	@NGAYSINH datetime,                
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF NOT EXISTS (SELECT 1 FROM KHACHHANG WHERE MAKH = @MAKH)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Khách hàng không tồn tại.'
		RETURN
	END	
	UPDATE KHACHHANG SET TENKH=@TENKH,SDT=@SDT,DIACHI=@DIACHI,PHAI=@PHAI,CMND=@CMND,NGAYSINH=@NGAYSINH
		WHERE MAKH=@MAKH
END
GO
/****** Object:  StoredProcedure [dbo].[sp_KhachHang_Delete] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_KhachHang_Delete]	
	@MAKH CHAR(10),	       
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF EXISTS (SELECT 1 FROM PHIEUXUAT WHERE MAKH = @MAKH)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END	
	
	DELETE FROM KHACHHANG WHERE MAKH=@MAKH
	
END
GO

/****************XE MAY************************/



/****** Object:  StoredProcedure [dbo].[sp_XeMay_selectALL] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_XeMay_selectALL]
	
AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,X.MAXE_PT,X.MASX,X.MALOAI, TENX_PT, TENNSX,TENLOAI,DT_XILANH, DT_BINHXANG, CONGSUAT, LOAIDONGCO, KHOILUONG, DAIRONGCAO, DONGIA_N, DVT,TGBH,SLTON,MAU,NAMSX,X.MOTA,QUOCGIA, HINH from XEMAY X INNER JOIN  NHASX NSX ON X.MASX=NSX.MASX INNER JOIN LOAIXE LX ON X.MALOAI=LX.MALOAI WHERE MAXE_PT LIKE 'XE%' 
END
/****** Object:  StoredProcedure [dbo].[sp_XeMay_selectbyID] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_XeMay_selectbyID]
	@MAXE_PT char(10)
AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,X.MAXE_PT,X.MASX,X.MALOAI, TENX_PT, TENNSX,TENLOAI,DT_XILANH, DT_BINHXANG, CONGSUAT, LOAIDONGCO, KHOILUONG, DAIRONGCAO, DONGIA_N, DVT,TGBH,SLTON,MAU,NAMSX,X.MOTA, QUOCGIA, HINH from XEMAY X INNER JOIN  NHASX NSX ON X.MASX=NSX.MASX INNER JOIN LOAIXE LX ON X.MALOAI=LX.MALOAI WHERE MAXE_PT=@MAXE_PT 
END
/****** Object:  StoredProcedure [dbo].[sp_XeMay_insert] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_XeMay_insert]
	 @MAXE_PT CHAR(10),
	 @MASX CHAR(10),
	 @MALOAI CHAR(10),
	 @TENX_PT NVARCHAR(100),
	 @DT_XILANH FLOAT,
	 @DT_BINHXANG FLOAT, 
	 @CONGSUAT FLOAT, 
	 @LOAIDONGCO NVARCHAR(50), 
	 @KHOILUONG INT, 
	 @DAIRONGCAO NVARCHAR(50), 
	 @DONGIA_N FLOAT, 
	 @DVT NCHAR(10),
	 @TGBH INT,
	 @SLTON INT,
	 @MAU NCHAR(30),
	 @NAMSX INT ,
	 @MOTA NVARCHAR(500),
	 @HINH IMAGE,
	 @ErrCode int = 0 OUTPUT,
	 @ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Mã xe đã tồn tại.'
		RETURN
	END
	Insert into XEMAY values(@MAXE_PT, @MASX,@MALOAI,@TENX_PT,@DT_XILANH, @DT_BINHXANG, @CONGSUAT, @LOAIDONGCO, @KHOILUONG, @DAIRONGCAO, @DONGIA_N, @DVT,@TGBH,@SLTON,@MAU,@NAMSX,@MOTA,@HINH )
END
/****** Object:  StoredProcedure [dbo].[sp_XeMay_update] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_XeMay_update]
	 @MAXE_PT CHAR(10),
	 @MASX CHAR(10),
	 @MALOAI CHAR(10),
	 @TENX_PT NVARCHAR(100),
	 @DT_XILANH FLOAT,
	 @DT_BINHXANG FLOAT, 
	 @CONGSUAT FLOAT, 
	 @LOAIDONGCO NVARCHAR(50), 
	 @KHOILUONG INT,	  
	 @DAIRONGCAO NVARCHAR(50), 
	 @DONGIA_N FLOAT, 
	 @DVT NCHAR(10),
	 @TGBH INT,
	 @SLTON INT,
	 @MAU NCHAR(30),
	 @NAMSX INT ,
	 @MOTA NVARCHAR(500),
	 @HINH IMAGE,
	 @ErrCode int = 0 OUTPUT,
	 @ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF NOT EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Mã xe không tồn tại.'
		RETURN
	END
	UPDATE XEMAY SET MASX=@MASX, MALOAI=@MALOAI, TENX_PT= @TENX_PT, DT_XILANH=@DT_XILANH, DT_BINHXANG= @DT_BINHXANG, CONGSUAT=@CONGSUAT, LOAIDONGCO=@LOAIDONGCO, KHOILUONG=@KHOILUONG, DAIRONGCAO=@DAIRONGCAO, DONGIA_N=@DONGIA_N, DVT=@DVT,TGBH=@TGBH,SLTON=@SLTON,MAU=@MAU,NAMSX=@NAMSX,MOTA=@MOTA,HINH=@HINH WHERE  MAXE_PT= @MAXE_PT
END
/****** Object:  StoredProcedure [dbo].[sp_XeMay_delete] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_XeMay_delete]
	 @MAXE_PT CHAR(10),
	 @ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại xe máy này'
		RETURN
	END		
	IF EXISTS (SELECT 1 FROM CT_PN WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_PX WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_SC WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM XEMAY WHERE MAXE_PT=@MAXE_PT
END
	
/************** PHỤ TÙNG*********************/

/****** Object:  StoredProcedure [dbo].[sp_PhuTung_selectAll] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhuTung_selectALL]

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,xm.MAXE_PT,TENX_PT,sx.MASX,TENNSX,lx.MALOAI, TENLOAI, DONGIA_N,DVT,TGBH,SLTON,NAMSX,xm.MOTA,HINH
	from XEMAY xm 
	INNER JOIN NHASX sx ON xm.MASX=sx.MASX
	INNER JOIN LOAIXE lx ON xm.MALOAI=lx.MALOAI	
	WHERE MAXE_PT LIKE '%PT%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_PhuTung_selectByID] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhuTung_selectByID]
	@MAXE_PT CHAR(10)
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,xm.MAXE_PT,TENX_PT,sx.MASX,TENNSX,lx.MALOAI, TENLOAI, DONGIA_N,DVT,TGBH,SLTON,NAMSX,xm.MOTA, HINH
	from XEMAY xm 
	INNER JOIN NHASX sx ON xm.MASX=sx.MASX
	INNER JOIN LOAIXE lx ON xm.MALOAI=lx.MALOAI	
	WHERE MAXE_PT =@MAXE_PT
END
GO
/****** Object:  StoredProcedure [dbo].[sp_PhuTung_insert] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhuTung_insert]
	 @MAXE_PT CHAR(10),
	 @MASX CHAR(10),
	 @MALOAI CHAR(10),
	 @TENX_PT NVARCHAR(100),	  
	 @DONGIA_N FLOAT, 
	 @DVT NCHAR(10),
	 @TGBH INT,
	 @SLTON INT,	 
	 @NAMSX INT ,
	 @MOTA NVARCHAR(500),
	 @HINH IMAGE,
	 @ErrCode int = 0 OUTPUT,
	 @ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Phụ tùng đã tồn tại.'
		RETURN
	END
	Insert into XEMAY values(@MAXE_PT, @MASX,@MALOAI,@TENX_PT,null, null, null, null, null, null, @DONGIA_N, @DVT,@TGBH,@SLTON,null,@NAMSX,@MOTA,@HINH )
END
/****** Object:  StoredProcedure [dbo].[sp_PhuTung_update] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhuTung_update]
	 @MAXE_PT CHAR(10),
	 @MASX CHAR(10),
	 @MALOAI CHAR(10),
	 @TENX_PT NVARCHAR(100),	  
	 @DONGIA_N FLOAT, 
	 @DVT NCHAR(10),
	 @TGBH INT,
	 @SLTON INT,	
	 @NAMSX INT ,
	 @MOTA NVARCHAR(500),
	 @HINH IMAGE,
	 @ErrCode int = 0 OUTPUT,
	 @ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
		
	IF NOT EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Mã phụ tùng không tồn tại.'
		RETURN
	END
	UPDATE XEMAY SET MASX=@MASX, MALOAI=@MALOAI, TENX_PT= @TENX_PT, DT_XILANH=null, DT_BINHXANG= null, CONGSUAT=null, LOAIDONGCO=null, KHOILUONG=null, DAIRONGCAO=null, DONGIA_N=@DONGIA_N, DVT=@DVT,TGBH=@TGBH,SLTON=@SLTON,MAU=null,NAMSX=@NAMSX,MOTA=@MOTA,HINH=@HINH WHERE  MAXE_PT= @MAXE_PT
END
/****** Object:  StoredProcedure [dbo].[sp_PhuTung_delete] ******/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhuTung_delete]
	 @MAXE_PT CHAR(10),
	 @ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
	SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại phụ tùng này'
		RETURN
	END	
	IF EXISTS (SELECT 1 FROM CT_PN WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_PX WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_SC WHERE MAXE_PT=@MAXE_PT)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM XEMAY WHERE MAXE_PT=@MAXE_PT
END

/*************UPDATE GIA***************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Gia_update]
	 @MAXE_PT CHAR(10),	   
	 @DONGIA_N FLOAT	 
	
AS
BEGIN	
	UPDATE XEMAY SET DONGIA_N=@DONGIA_N WHERE  MAXE_PT= @MAXE_PT
END
/*********************LOAIXE***************************/
/****** Object:  StoredProcedure [dbo].[sp_LoaiXe_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_LoaiXe_select]
	@MALOAI CHAR(10)=''
AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MALOAI,TENLOAI,MOTA  from LOAIXE WHERE @MALOAI='' or MALOAI LIKE '%' + @MALOAI + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_LoaiXe_Insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_LoaiXe_Insert]	
	@MALOAI char(10) ,
    @TENLOAI  nvarchar(50),
    @MOTA  nvarchar(100),  
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM LOAIXE WHERE MALOAI = @MALOAI)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên loại đã tồn tại.'
		RETURN
	END
	INSERT INTO LOAIXE(MALOAI,TENLOAI,MOTA)
	SELECT @MALOAI,@TENLOAI,@MOTA
END
GO
/****** Object:  StoredProcedure [dbo].[sp_LoaiXe_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_LoaiXe_Update]	
	@MALOAI char(10),
    @TENLOAI  nvarchar(50),
    @MOTA nvarchar(200),  
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT  EXISTS (SELECT 1 FROM LOAIXE WHERE MALOAI = @MALOAI)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Loại xe này không tồn tại'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM XEMAY WHERE MALOAI = @MALOAI)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể sửa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM SUACHUA WHERE MALOAI = @MALOAI)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể sửa'
		RETURN
	END
	UPDATE LOAIXE
	SET TENLOAI=@TENLOAI,MOTA=@MOTA
	WHERE MALOAI= @MALOAI
END
GO
/****** Object:  StoredProcedure [dbo].[sp_LoaiXe_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_LoaiXe_Delete]	
	@MALOAI char(10),
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM LOAIXE WHERE MALOAI= @MALOAI )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại loại xe này'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM XEMAY WHERE MALOAI= @MALOAI )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM LOAIXE WHERE MALOAI = @MALOAI
END
GO
/*********************NHÀ CUNG CẤP***************************/
/****** Object:  StoredProcedure [dbo].[sp_NhaCC_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaCC_select]
	@MANCC CHAR(10)=''
AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MANCC,TENNCC,DIACHI,SDT,MAIL from NHACC WHERE @MANCC='' or MANCC LIKE '%' + @MANCC + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NCC_Insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_NhaCC_insert]	
	@MANCC char(10),
    @TENNCC  nvarchar(50),
    @DIACHI  nvarchar(100),
    @SDT  char(11),
	@MAIL char(30),    
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM NHACC WHERE MANCC = @MANCC)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên nhà cung cấp đã tồn tại.'
		RETURN
	END
	INSERT INTO NHACC(MANCC,TENNCC,DIACHI,SDT,MAIL)
	SELECT @MANCC,@TENNCC,@DIACHI,@SDT,@MAIL
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NCC_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NCC_Update]	
	@MANCC char(10),
    @TENNCC  nvarchar(50),
    @DIACHI  nvarchar(100),
    @SDT  char(11),
	@MAIL char(30),    
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT  EXISTS (SELECT 1 FROM NHACC WHERE MANCC = @MANCC)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = 'Tên nhà cung cấp này không tồn tại'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM PHIEUNHAP WHERE MANCC = @MANCC )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không thể sửa'
		RETURN
	END
UPDATE NHACC
	SET TENNCC=@TENNCC,DIACHI=@DIACHI,SDT=@SDT,MAIL=@MAIL
	WHERE MANCC= @MANCC
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NCC_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NCC_Delete]	
	@MANCC char(10),
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM NHACC WHERE MANCC= @MANCC )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại nhà cung cấp này'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM PHIEUNHAP WHERE MANCC = @MANCC )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM NHACC WHERE MANCC = @MANCC
END
GO


/*********************NHÀ SẢN XUẤT***************************/
/****** Object:  StoredProcedure [dbo].[sp_NhaSX_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaSX_select]
	@MASX CHAR(10)=''
AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASX,TENNSX,QUOCGIA  from NHASX WHERE @MASX='' or MASX LIKE '%' + @MASX + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhaSX_Insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_NhaSX_Insert]	
	@MASX char(10) ,
    @TENNSX  nvarchar(50),
    @QUOCGIA  nvarchar(100),  
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM NHASX WHERE MASX = @MASX)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'nhà sản xuất đã tồn tại.'
		RETURN
	END
	INSERT INTO NHASX(MASX,TENNSX,QUOCGIA)
	SELECT @MASX,@TENNSX,@QUOCGIA
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhaSX_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaSX_Update]	
	@MASX char(10) ,
    @TENNSX  nvarchar(50),
    @QUOCGIA  nvarchar(100),  
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT  EXISTS (SELECT 1 FROM NHASX WHERE MASX = @MASX)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Nhà sản xuất không tồn tại'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM XEMAY WHERE MASX = @MASX)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể sửa'
		RETURN
	END
	UPDATE NHASX
	SET TENNSX=@TENNSX,QUOCGIA=@QUOCGIA
	WHERE MASX= @MASX
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NhaSX_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaSX_Delete]	
	@MASX char(10),
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM NHASX WHERE MASX= @MASX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Nhà sản xuất không tồn tại'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM XEMAY WHERE MASX = @MASX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM NHASX WHERE MASX = @MASX
END
GO
/*********************NHÀ CUNG CẤP***************************/
/****** Object:  StoredProcedure [dbo].[sp_NhaCC_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NhaCC_select]
	@MANCC CHAR(10)=''
AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MANCC,TENNCC,DIACHI,SDT,MAIL from NHACC WHERE @MANCC='' or MANCC LIKE '%' + @MANCC + '%' 
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NCC_Insert] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_NhaCC_insert]	
	@MANCC char(10),
    @TENNCC  nvarchar(50),
    @DIACHI  nvarchar(100),
    @SDT  char(11),
	@MAIL char(30),    
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT
AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM NHACC WHERE MANCC = @MANCC)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Tên nhà cung cấp đã tồn tại.'
		RETURN
	END
	INSERT INTO NHACC(MANCC,TENNCC,DIACHI,SDT,MAIL)
	SELECT @MANCC,@TENNCC,@DIACHI,@SDT,@MAIL
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NCC_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NCC_Update]	
	@MANCC char(10),
    @TENNCC  nvarchar(50),
    @DIACHI  nvarchar(100),
    @SDT  char(11),
	@MAIL char(30),    
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT  EXISTS (SELECT 1 FROM NHACC WHERE MANCC = @MANCC)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = 'Tên nhà cung cấp này không tồn tại'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM PHIEUNHAP WHERE MANCC = @MANCC )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không thể sửa'
		RETURN
	END
UPDATE NHACC
	SET TENNCC=@TENNCC,DIACHI=@DIACHI,SDT=@SDT,MAIL=@MAIL
	WHERE MANCC= @MANCC
END
GO
/****** Object:  StoredProcedure [dbo].[sp_NCC_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_NCC_Delete]	
	@MANCC char(10),
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM NHACC WHERE MANCC= @MANCC )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại nhà cung cấp này'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM PHIEUNHAP WHERE MANCC = @MANCC )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM NHACC WHERE MANCC = @MANCC
END
GO

/**********************PHIEU NHAP************************/
/****** Object:  StoredProcedure [dbo].[sp_PhieuNhap_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[sp_PhieuNhap_select]
	@MAPN CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,pn.MAPN,ncc.MANCC,ncc.TENNCC,nv.MANV,nv.TENNV,NGAYNHAP,THUE_N,TINHTRANGHD, TINHTRANGTT,TONGTIEN_N
	from PHIEUNHAP pn
	INNER JOIN NHACC ncc ON pn.MANCC=ncc.MANCC
	INNER JOIN NHANVIEN nv ON pn.MANV=nv.MANV
	INNER JOIN CT_PN ct ON ct.MAPN=pn.MAPN
	WHERE (@MAPN='' or pn.MAPN LIKE '%' + @MAPN + '%')
END

/****** Object:  StoredProcedure [dbo].[sp_PhieuNhap_Insert] ******/

--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO

--CREATE PROCEDURE [dbo].[sp_PhieuNhap_Insert]	
--	@MAPN char(10),
--    @MANCC char(10),   
--    @MANV  char(10),
--    @NGAYNHAP datetime,
--    @THUE_N  float ,
--    @TINHTRANG  int  ,
--    @TONGTIEN_N  float	
--AS
--BEGIN
--	INSERT INTO PHIEUNHAP (MAPN,MANCC,MANV,NGAYNHAP,THUE_N,TINHTRANG,TONGTIEN_N)
--	SELECT @MAPN,@MANCC,@MANV,@NGAYNHAP,@THUE_N,@TINHTRANG,@TONGTIEN_N
--END
--GO
/****** Object:  StoredProcedure [dbo].[sp_PhieuNhap_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhieuNhap_Update]	
	@MAPN char(10),
    @MANCC char(10),    
    @MANV  char(10),
    @NGAYNHAP datetime,
    @THUE_N  float ,
    @TINHTRANG  int  ,
    @TONGTIEN_N  float,
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM PHIEUNHAP WHERE MAPN = @MAPN)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Phiếu nhập không tồn tại.'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_PN WHERE MAPN = @MAPN)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể sửa!'
		RETURN
	END
	IF NOT EXISTS (SELECT 1 FROM NHACC WHERE MANCC = @MANCC)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không tồn tại nhà cung cấp này'
		RETURN
	END
	IF NOT EXISTS (SELECT 1 FROM NHANVIEN WHERE MANV = @MANV)
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'không tồn tại nhân viên này'
		RETURN
	END
	UPDATE PHIEUNHAP
	SET MANCC=@MANCC,MANV=@MANV,NGAYNHAP=@NGAYNHAP,THUE_N=@THUE_N,TINHTRANG=@TINHTRANG,TONGTIEN_N=@TONGTIEN_N
	WHERE MAPN = @MAPN
END
GO
/****** Object:  StoredProcedure [dbo].[sp_PhieuNhap_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhieuNhap_Delete]	
	@MAPN CHAR(10),	
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF EXISTS (SELECT 1 FROM CT_PN WHERE MAPN = @MAPN )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM PHIEUNHAP WHERE MAPN=@MAPN
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/**********************PHIEU XUẤT************************/
/****** Object:  StoredProcedure [dbo].[sp_PhieuXuat_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhieuXuat_select]
	@MAPX CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.MAKH,kh.TENKH,nv.MANV,nv.TENNV,NGAYXUAT,PHI_DKX,THUE_X,UUDAI,TRANGTHAI_HT,TONGTIEN_X
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
	INNER JOIN CT_PX ct ON ct.MAPX=px.MAPX
	WHERE @MAPX='' or px.MAPX LIKE '%' + @MAPX + '%' 
END
/****** Object:  StoredProcedure [dbo].[sp_PhieuXuat_Insert] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhieuXuat_Insert]	
	@MAPX char(10) ,   
    @MAKH char(10),
    @MANV   char(10),
    @NGAYXUAT datetime ,
    @PHI_DKX  float,
    @UUDAI    float,
    @TONGTIEN_X  float,
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT EXISTS (SELECT 1 FROM KHACHHANG WHERE MAKH = @MAKH )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Khách hàng không tồn tại.'
		RETURN
	END
	IF NOT EXISTS (SELECT 1 FROM NHANVIEN WHERE MANV = @MANV )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Nhân viên không tồn tại.'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM PHIEUXUAT WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Phiếu xuất đã tồn tại.'
		RETURN
	END
	INSERT INTO PHIEUXUAT (MAPX,MAKH,MANV,NGAYXUAT,PHI_DKX,UUDAI,TONGTIEN_X)
	SELECT @MAPX,@MAKH,@MANV,@NGAYXUAT,@PHI_DKX,@UUDAI,@TONGTIEN_X
END
GO
/****** Object:  StoredProcedure [dbo].[sp_PhieuXuat_Update] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhieuXuat_Update]	
	@MAPX char(10) ,
	@MAKH char(10),
    @MANV   char(10),
    @NGAYXUAT datetime ,
    @PHI_DKX  float,
    @UUDAI    float,
    @TONGTIEN_X  float,
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT EXISTS (SELECT 1 FROM PHIEUXUAT WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại mã phiếu xuất này'
		RETURN
	END
	IF NOT EXISTS (SELECT 1 FROM KHACHHANG WHERE MAKH = @MAKH )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Khách hàng không tồn tại.'
		RETURN
	END
	IF NOT EXISTS (SELECT 1 FROM NHANVIEN WHERE MANV = @MANV )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Nhân viên không tồn tại.'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_PX WHERE MAPX = @MAPX  )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Phiếu xuất đã tồn tại.'
		RETURN
	END
	UPDATE PHIEUXUAT
	SET MAKH=@MAKH,MANV=@MANV,NGAYXUAT=@NGAYXUAT,PHI_DKX=@PHI_DKX, UUDAI= @UUDAI,TONGTIEN_X=@TONGTIEN_X
	WHERE MAPX = @MAPX
END
GO
/****** Object:  StoredProcedure [dbo].[sp_PhieuXuat_Delete] ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_PhieuXuat_Delete]	
	@MAPX CHAR(10),	
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT

AS
BEGIN
SELECT @ErrCode = 0, @ErrMsg = ''
	IF NOT EXISTS (SELECT 1 FROM PHIEUXUAT WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không tồn tại mã phiếu xuất này'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_DOITRA WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM BAOHANH WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_THANHTOAN WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	IF EXISTS (SELECT 1 FROM CT_PX WHERE MAPX = @MAPX )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Không thể xóa'
		RETURN
	END
	DELETE FROM PHIEUXUAT  WHERE MAPX=@MAPX
END
GO


/****** Object:  StoredProcedure [dbo].[sp_XeMay_CapNhat_SLTon] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [sp_XeMay_CapNhat_SLTon]	
	@MAXE_PT CHAR(10),
	@SOLUONG INT, 
	@ErrCode int = 0 OUTPUT,
	@ErrMsg NVARCHAR(200) = '' OUTPUT
AS
	SELECT @ErrCode = 0, @ErrMsg = ''
	
	IF NOT EXISTS (SELECT 1 FROM XEMAY WHERE MAXE_PT = @MAXE_PT )
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Xe máy không tồn tại'
		RETURN
	END
	IF  (SELECT SLTON FROM XEMAY WHERE MAXE_PT = @MAXE_PT )<@SOLUONG
	BEGIN
		SELECT @ErrCode = 1, @ErrMsg = N'Số lượng tồn trong kho không đủ để thực hiện!'
		RETURN
	END
	UPDATE XEMAY
	SET SLTON=SLTON-@SOLUONG
	WHERE MAXE_PT=@MAXE_PT

/*********************CT_PN*************************/
/****** Object:  StoredProcedure [dbo].[sp_CT_PN_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_CT_PN_select]		
    @MAPN char(10)   

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,pn.MAXE_PT,xe.TENX_PT,pn.SOMAY, pn.SOKHUNG,xe.DVT,DG_N, SL_N, THANHTIEN_N FROM CT_PN pn INNER JOIN XEMAY xe ON pn.MAXE_PT=xe.MAXE_PT WHERE pn.MAPN=@MAPN
END
GO
/*********************CT_PX*************************/
/****** Object:  StoredProcedure [dbo].[sp_CT_PX_select] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_CT_PX_select]		
    @MAPX char(10)   

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAXE_PT,xe.TENX_PT,px.SOMAY, px.SOKHUNG,px.KHUYENMAI,xe.DVT,DG_X, SL_X, THANHTIEN_X FROM CT_PX px INNER JOIN XEMAY xe ON px.MAXE_PT=xe.MAXE_PT WHERE px.MAPX=@MAPX
END
GO

/****** Object:  StoredProcedure [dbo].[sp_getPX_TraGop] ******/
CREATE PROCEDURE [dbo].[sp_getPX_TraGop]
AS
BEGIN
	select DISTINCT PX.MAPX FROM PHIEUXUAT PX, CT_THANHTOAN CT WHERE PX.MAPX=CT.MAPX AND MAPTTT='PTT0000002'
END
GO	
/****** Object:  StoredProcedure [dbo].[sp_getPX_NgayTre] ******/
CREATE Function [dbo].[fn_getPX_NgayTre]
(@NGAYHIENTAI VARCHAR(30),
@NGAYHEN VARCHAR(30))
Returns int
AS
BEGIN
	Declare @ngaychenhlech int
	Select @ngaychenhlech= DATEDIFF(dd,@NGAYHIENTAI,@NGAYHEN)
	return @ngaychenhlech
END
GO	
/**********Lay Phieu Xuat khong trung nhau**************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_getPhieuXuatNonDistinct]
	@MAPX CHAR(10)=''
	

AS
BEGIN
	select distinct px.MAPX,kh.MAKH,kh.TENKH,nv.MANV,nv.TENNV,NGAYXUAT,PHI_DKX,THUE_X,UUDAI,TRANGTHAI_HT,TONGTIEN_X
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV	
	WHERE @MAPX='' or px.MAPX LIKE '%' + @MAPX + '%' 
END
/************Function GetTinhTrangBH*************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Function [dbo].[fn_GetTinhTrangBH]
(@NGAYMUA Datetime,
@TGBH int)
returns nvarchar(30)
AS
BEGIN	
	Declare @TinhTrang nvarchar(30)
	Declare @NgayHetHan Date
	set @NgayHetHan=DATEADD(month,@TGBH,@NGAYMUA) 
	if(GETDATE()>@NgayHetHan)
		set @TinhTrang = N'Đã hết hạn bảo hành'
	else
		set @TinhTrang= N'Còn hạn bảo hành'
	Return @TinhTrang	
END

Declare @TinhTrang nvarchar(30)
SELECT @TinhTrang = dbo.fn_GetTinhTrangBH('2017-10-18 00:00:00.000',6)
PRINT @TinhTrang
/****** Object:  StoredProcedure [dbo].[sp_Load_DM_BHbyMABH] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Load_DM_BH]		
    @MABH char(10)=''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,bh.MABH,bh.MAPX,bh.MANV, bh.NGAYNHAN,bh.NGAYGIAO,bh.GHICHU FROM BAOHANH bh where @MABH='' or MABH like '%'+@MABH+'%' 
END
GO
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[sp_Load_DM_BHbyMAPX] ******/
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Load_DM_BHbyMAPX]		
	@MAPX char(10)=''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,bh.MABH,bh.MAPX,bh.MANV, bh.NGAYNHAN,bh.NGAYGIAO,bh.GHICHU FROM BAOHANH bh where  @MAPX='' or MAPX like '%'+@MAPX+'%'
END
GO
/****** Object:  StoredProcedure [dbo].[sp_TraGop_select] ******/
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TraGop_select]	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT, px.MAPX, TENKH, TENNV, NGAYXUAT, TONGTIEN_X, DATHU, CONLAI,KIHENKE,px.TRANGTHAI_HT
	from PHIEUXUAT px Inner join KHACHHANG kh on px.MAKH=kh.MAKH
	inner join NHANVIEN nv on px.MANV=nv.MANV
	inner join CT_THANHTOAN ct  on px.MAPX=ct.MAPX
	where px.TRANGTHAI_HT=N'Đang thanh toán' or px.TRANGTHAI_HT='Chưa thanh toán'
END
GO
/****** Object:  StoredProcedure [dbo].[sp_Load_SuaChua] ******/
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Load_SuaChua]		
	@MASC char(10)=''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASC,TENKH,SDT,DIACHI, MANV, MALOAI, TENXE_PT,NV_SC,NGAYNHAN,NGAYGIAO,HSX, BIENSO,TIENCONG,TONGTIEN_X, GHICHU FROM SUACHUA sc where  @MASC='' or MASC like '%'+@MASC+'%'
END
GO
/******************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TraGop_select]
AS
BEGIN
 select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.TENKH,nv.TENNV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X,cttt.DATHU,cttt.CONLAI,cttt.KIHENKE
 from PHIEUXUAT px
 INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
 INNER JOIN CT_THANHTOAN cttt ON px.MAPX=cttt.MAPX
 INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
 WHERE TRANGTHAI_HT=N'Chưa thanh toán' OR TRANGTHAI_HT=N'Đang thanh toán' and SOTHANGDATRA=(SELECT max(SOTHANGDATRA) FROM CT_THANHTOAN A WHERE A.MAPX= cttt.MAPX) AND DATEDIFF(DAY,GETDATE(),KIHENKE)<=3
END
GO
/****** Object:  StoredProcedure [dbo].[sp_Load_PC] ******/
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_Load_PC]		
	@MAPC char(10)=''

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT, MAPC, MAPN,MANV,NGAYCHI,GHICHU from PHIEUCHI where  @MAPC='' or MAPC like '%'+@MAPC+'%'
END
GO
/*************************THỐNG KÊ BÁN HÀNG******************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_ThongKeBanHang_select]
	@MAPX CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.MAKH,nv.MANV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
	WHERE @MAPX='' or MAPX LIKE '%' + @MAPX + '%' 
END



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeBanHangTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPX,MAKH,MANV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X FROM PHIEUXUAT WHERE  NGAYXUAT>=@NGAYBATDAU AND NGAYXUAT<=@NGAYKETTHUC
END
/******************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeBanHangTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPX,MAKH,MANV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X FROM PHIEUXUAT WHERE  NGAYXUAT>=@NAM
END


/**************************THỐNG KÊ NHẬP HÀNG*********************************/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[sp_ThongKeNhapHang_select]
	@MAPN CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,pn.MAPN,ncc.MANCC,nv.MANV,NGAYNHAP,TINHTRANGTT, TINHTRANGHD,TONGTIEN_N
	from PHIEUNHAP pn
	INNER JOIN NHACC ncc ON pn.MANCC=ncc.MANCC
	INNER JOIN NHANVIEN nv ON pn.MANV=nv.MANV
	WHERE @MAPN='' or MAPN LIKE '%' + @MAPN + '%' 
END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeNhapHangTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPN,MANCC,MANV,NGAYNHAP,TINHTRANGTT, TINHTRANGHD,TONGTIEN_N FROM PHIEUNHAP WHERE YEAR(NGAYNHAP)>=YEAR(@NAM)
END
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeNhapHangTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPN,MANCC,MANV,NGAYNHAP,TINHTRANGHD,TINHTRANGTT,TONGTIEN_N FROM PHIEUNHAP WHERE  NGAYNHAP>=@NGAYBATDAU AND NGAYNHAP<=@NGAYKETTHUC
END
/**************************THỐNG KÊ TRẢ GÓP********************************/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TraGop_select]
AS
BEGIN
 select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.TENKH,nv.TENNV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X,cttt.DATHU,cttt.CONLAI,cttt.KIHENKE
 from PHIEUXUAT px
 INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
 INNER JOIN CT_THANHTOAN cttt ON px.MAPX=cttt.MAPX
 INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
 WHERE TRANGTHAI_HT=N'Chưa thanh toán' OR TRANGTHAI_HT=N'Đang thanh toán' and SOTHANGDATRA=(SELECT max(SOTHANGDATRA) FROM CT_THANHTOAN A WHERE A.MAPX= cttt.MAPX) AND DATEDIFF(DAY,GETDATE(),KIHENKE)<=3
END
GO
/***************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeTraGopTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.TENKH,nv.TENNV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X,cttt.DATHU,cttt.CONLAI,cttt.KIHENKE
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN CT_THANHTOAN cttt ON px.MAPX=cttt.MAPX
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
    WHERE NGAYXUAT>=@NGAYBATDAU AND NGAYXUAT<=@NGAYKETTHUC and AND KIHENKE IS NOT NULL
END
/**************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeTraGopTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.TENKH,nv.TENNV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X,cttt.DATHU,cttt.CONLAI,cttt.KIHENKE
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN CT_THANHTOAN cttt ON px.MAPX=cttt.MAPX
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
    WHERE YEAR(NGAYXUAT)=@NAM or @NAM='' AND KIHENKE IS NOT NULL
END
/***********************************/
CREATE PROCEDURE [dbo].[sp_TraGop_Sort]
AS
BEGIN
 select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,kh.TENKH,nv.TENNV,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X,cttt.DATHU,cttt.CONLAI,cttt.KIHENKE
 from PHIEUXUAT px
 INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
 INNER JOIN CT_THANHTOAN cttt ON px.MAPX=cttt.MAPX
 INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
 WHERE TRANGTHAI_HT=N'Chưa thanh toán' OR TRANGTHAI_HT=N'Đang thanh toán' AND KIHENKE IS NOT NULL
 ORDER BY DATEDIFF(DAY,GETDATE(),KIHENKE) ASC
END
/**************************THỐNG KÊ BẢO HÀNH*********************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeBaoHanhTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MABH,MAPX,MANV,NGAYNHAN,NGAYGIAO FROM BAOHANH WHERE  NGAYNHAN>=@NGAYBATDAU AND NGAYNHAN<=@NGAYKETTHUC
END
/**************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeBaoHanhTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MABH,MAPX,MANV,NGAYNHAN,NGAYGIAO FROM BAOHANH WHERE  NGAYNHAN>=@NAM
END
/**************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_BaoHanh_select]
	@MABH CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MABH,px.MAPX,nv.MANV,NGAYNHAN,NGAYGIAO  from BAOHANH bh
	INNER JOIN PHIEUXUAT px ON bh.MAPX=px.MAPX
	INNER JOIN NHANVIEN nv ON bh.MANV=nv.MANV
	 WHERE @MABH='' or MABH LIKE '%' + @MABH + '%' 

END




/**************************THỐNG KÊ SỬA CHỮA*********************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeSuaChuaTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASC,TENKH,MANV,MALOAI,TENXE_PT,NV_SC,NGAYNHAN,NGAYGIAO,TONGTIEN_X FROM SUACHUA WHERE  NGAYNHAN>=@NGAYBATDAU AND NGAYNHAN<=@NGAYKETTHUC
END
/**************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeSuaChuaTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASC,TENKH,MANV,MALOAI,TENXE_PT,NV_SC,NGAYNHAN,NGAYGIAO,TONGTIEN_X FROM SUACHUA WHERE  YEAR(NGAYNHAN)=@NAM
END
/**************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_SuaChua_select]
	@MASC CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASC,TENKH,nv.MANV,lx.MALOAI,TENXE_PT,NV_SC,NGAYNHAN,NGAYGIAO,TONGTIEN_X 
	from SUACHUA sc
	INNER JOIN LOAIXE lx ON lx.MALOAI=sc.MALOAI
	INNER JOIN NHANVIEN nv ON nv.MANV=sc.MANV
	 WHERE @MASC='' or MASC LIKE '%' + @MASC + '%' 

END


/************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeSuaChuaTheoThang]
@MASC char(10)='',
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MASC,MALOAI,TENX_PT,TONGTIEN_X FROM SUACHUA WHERE  (@MASC='' or MASC LIKE '%' + @MASC + '%'  )AND NGAYSC>=@NGAYBATDAU AND NGAYSC<=@NGAYKETTHUC
END
/********************************DOANH THU BÁN HÀNG ***************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_DoanhThuBH_select]
	@MAPX CHAR(10)=''
	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPX,NGAYXUAT,PHI_DKX,UUDAI,TRANGTHAI_HT,TONGTIEN_X
	from PHIEUXUAT px
	INNER JOIN KHACHHANG kh ON px.MAKH=kh.MAKH
	INNER JOIN NHANVIEN nv ON px.MANV=nv.MANV
	WHERE @MAPX='' or MAPX LIKE '%' + @MAPX + '%' AND TRANGTHAI_HT=N'Đã thanh toán'
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeDoanhThuBHTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as  STT,MAPX,NGAYXUAT,TRANGTHAI_HT,TONGTIEN_X FROM PHIEUXUAT WHERE  NGAYXUAT>=@NGAYBATDAU AND NGAYXUAT<=@NGAYKETTHUC
END
/******************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeDoanhThuBHTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPX,NGAYXUAT,PHI_DKX,UUDAI,TRANGTHAI_HT,TONGTIEN_X FROM PHIEUXUAT WHERE YEAR(NGAYXUAT)=@NAM  or @NAM=''
END
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--/**********************Select hàng tồn xuất*********************************/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--CREATE PROCEDURE [dbo].[sp_TongHopXeXuat_Select]

--AS
--BEGIN 

--select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,xe.MAXE_PT,TENX_PT,DVT,SUM(SL_X) AS SL_XUAT, DONGIA_X FROM XEMAY xe
--inner join CT_PX ctx on xe.MAXE_PT=ctx.MAXE_PT
--inner join PHIEUXUAT px on px.MAPX=ctx.MAPX 
--WHERE xe.MAXE_PT like '%XE%'
--Group by xe.MAXE_PT, TENX_PT,DVT,DONGIA_X
--END
--/**********************Tổng hợp hàng tồn xuất*********************************/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--CREATE PROCEDURE [dbo].[sp_TongHopXeXuat_Ngay]
--@NGAYBATDAU DATETIME,
--@NGAYKETTHUC DATETIME
--AS
--BEGIN 

--select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,xe.MAXE_PT,TENX_PT,DVT,SUM(SL_X) AS SL_XUAT, DONGIA_X FROM XEMAY xe
--inner join CT_PX ctx on xe.MAXE_PT=ctx.MAXE_PT
--inner join PHIEUXUAT px on px.MAPX=ctx.MAPX 
--WHERE NGAYXUAT>=@NGAYBATDAU AND NGAYXUAT<=@NGAYKETTHUC and xe.MAXE_PT like '%XE%'
--Group by xe.MAXE_PT, TENX_PT,DVT,DONGIA_X
--END

--/**********************Tổng hợp hàng tồn nhập*********************************/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--CREATE PROCEDURE [dbo].[sp_TongHopXeNhap_Ngay]
--@NGAYBATDAU DATETIME,
--@NGAYKETTHUC DATETIME,
--@MAXE_PT char(10)
--AS
--BEGIN 

--select xe.MAXE_PT,SUM(SL_N) AS SL_NHAP, DONGIA_N FROM XEMAY xe
--inner join CT_PN ctn on ctn.MAXE_PT = xe.MAXE_PT
--inner join PHIEUNHAP pn on pn.MAPN=ctn.MAPN
--WHERE NGAYNHAP>=@NGAYBATDAU AND NGAYNHAP<=@NGAYKETTHUC and xe.MAXE_PT like '%XE%' and xe.MAXE_PT=@MAXE_PT
--Group by xe.MAXE_PT,DONGIA_N
--END
/******************************************************************************************/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_Xoa_TaiKhoan]
@TAIKHOAN CHAR(10)
AS
BEGIN 
	delete from QL_NHOMDANGNHAP where TAIKHOAN=@TAIKHOAN
	delete from QL_DANGNHAP where TAIKHOAN=@TAIKHOAN
END

/*****************LỢI NHUẬN BÁN HÀNG***************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create PROCEDURE [dbo].[sp_ThongKeLoiNhuan_Ngay]
	@NgayBD DateTime,
	@NgayKT DateTime	

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,NGAYXUAT,TONGTIEN_X, Sum(xm.DONGIA_N*ct.SL_X) as GIAVON
	from PHIEUXUAT px
	INNER JOIN CT_PX ct ON px.MAPX=ct.MAPX
	INNER JOIN XEMAY xm ON xm.MAXE_PT=ct.MAXE_PT
	where @NgayBD<px.NGAYXUAT and @NgayKT>px.NGAYXUAT
	group by px.MAPX,NGAYXUAT,TONGTIEN_X
END
/*******************************LÃI SUẤT**************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create PROCEDURE [dbo].[sp_ThongKeLoiNhuan_Nam]
	@NAM int

AS
BEGIN
	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,px.MAPX,NGAYXUAT,TONGTIEN_X, Sum(xm.DONGIA_N*ct.SL_X) as GIAVON
	from PHIEUXUAT px
	INNER JOIN CT_PX ct ON px.MAPX=ct.MAPX
	INNER JOIN XEMAY xm ON xm.MAXE_PT=ct.MAXE_PT
	where YEAR(px.NGAYXUAT)=@NAM
	group by px.MAPX,NGAYXUAT,TONGTIEN_X
END

/**************************THỐNG KÊ BÁN HÀNG*********************************/

--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO

--ALTER PROCEDURE [dbo].[sp_ThongKeBanHang_select]
--	@MAPN CHAR(10)=''
	

--AS
--BEGIN
--	select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,pn.MAPN,ncc.MANCC,nv.MANV,NGAYNHAP,TINHTRANGTT, TINHTRANGHD,TONGTIEN_N
--	from PHIEUNHAP pn
--	INNER JOIN NHACC ncc ON pn.MANCC=ncc.MANCC
--	INNER JOIN NHANVIEN nv ON pn.MANV=nv.MANV
--	WHERE @MAPN='' or MAPN LIKE '%' + @MAPN + '%' 
--END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeBanHangTheoNam]
@NAM char(4)
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPX,kh.MAKH,kh.TENKH,nv.MANV,nv.TENNV,NGAYXUAT,PHI_DKX, THUE_X,UUDAI,TRANGTHAI_HT,TONGTIEN_X FROM PHIEUXUAT px
inner join KHACHHANG kh on px.MAKH=kh.MAKH
inner join NHANVIEN nv on nv.MANV=px.MANV
 WHERE YEAR(NGAYXUAT)=YEAR(@NAM)
END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ThongKeBanHangTheoNgay]
@NGAYBATDAU DATETIME,
@NGAYKETTHUC DATETIME
AS
BEGIN 

select ROW_NUMBER() OVER (ORDER BY (SELECT 1)) as STT,MAPX,kh.MAKH,kh.TENKH,nv.MANV,nv.TENNV,NGAYXUAT,PHI_DKX, THUE_X,UUDAI,TRANGTHAI_HT,TONGTIEN_X FROM PHIEUXUAT px
inner join KHACHHANG kh on px.MAKH=kh.MAKH
inner join NHANVIEN nv on nv.MANV=px.MANV
 WHERE  NGAYXUAT>=@NGAYBATDAU AND NGAYXUAT<=@NGAYKETTHUC
END

/********************DOANH THU THEO QUÝ**************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DoanhThu_Quy]
@NAM char(4)
AS
BEGIN 
	Select YEAR(NGAYXUAT)as DATE, SUM(TONGTIEN_X) as DOANHTHU from PHIEUXUAT group by YEAR(NGAYXUAT)
END
/***********************DAONHTHU THÁNG***/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DoanhThu_Thang]
@NAM char(4)
AS
BEGIN 
	Select Month(NGAYXUAT)as DATE, SUM(TONGTIEN_X) as DOANHTHU from PHIEUXUAT where TRANGTHAI_HT=N'Đã thanh toán' and YEAR(NGAYXUAT)=@NAM group by MONTh(NGAYXUAT)
END

/***********************Xe Ban Chay***/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[XeMay_BanChay]
@NAM char(4)
AS
BEGIN 
	Select top 10 xm.MAXE_PT, TENX_PT, SUM(ct.SL_X) as SOLUONG from XEMAY xm inner join CT_PX ct on ct.MAXE_PT=xm.MAXE_PT inner join PHIEUXUAT px on ct.MAPX=px.MAPX where YEAR(NGAYXUAT)=@NAM  group by xm.MAXE_PT,xm.TENX_PT order by SUM(SL_X) DESC
END